#include<bits/stdc++.h>
using namespace std;

int finalLength = INT_MIN;
vector<string> finalStrings;
void lcs(int* arr, int n, int li, int idx, int len, string psf){
    //Base case
    if(idx == n){
      if(len > finalLength){
        finalLength = len;
        finalStrings.clear();
        finalStrings.push_back(psf);
      }
      else if(len == finalLength){
        finalStrings.push_back(psf);  
      }
       return;
    }
    
    //Recursive Calls
    lcs(arr, n, li, idx+1, len, psf);
    //I'm considering this
    if(li == -1 || arr[idx] >= arr[li]){
            lcs(arr, n, idx, idx+1, len+1, psf+to_string(arr[idx])+" -> ");
    }
    
    
}

int main(){
    int n;
    cin >> n;
    
    int* arr = new int[n];
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    
    lcs(arr, n, -1, 0, 0, "");
    cout << finalLength << endl;
    for(auto i: finalStrings){
        for(int j = 0; j < i.size()-3; j++)
        cout << i[j];
        cout << endl;
    }
    return 0;
}
