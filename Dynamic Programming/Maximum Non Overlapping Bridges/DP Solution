#include<bits/stdc++.h>
using namespace std;

void maximumNonOverlap(int n, vector<pair<int, int>>& bridges){
    //sort this bridges vector on the basis of north poles
    sort(bridges.begin(), bridges.end());
    int* dp = new int[n];
    for(int i = 0; i < n; i++){
        dp[i] = 1;
    }
    
    //Now applying LCS
    for(int i = 0; i < n; i++){
        pair<int, int> curr = bridges[i];
        for(int j = i-1; j>=0; j--){
            if(curr.second >= bridges[j].second){
                dp[i] = max(dp[i], (dp[j]+1));
            }
        }
        
    }
   
    //Now find max 
    int maxAns = INT_MIN;
    for(int i = 0; i < n; i++){
        maxAns = max(maxAns, dp[i]);
    }
    
    //Printing the answer
    cout << maxAns << endl;
}

int main(){
    int n;
    cin >> n;
    
    vector<pair<int, int>> bridges(n);
    for(int i = 0; i < n; i++){
        pair<int, int> temp;
        cin >> temp.first;
        cin >> temp.second;
        bridges[i] = (temp);
    }
    
    maximumNonOverlap(n, bridges);
    return 0;
}
