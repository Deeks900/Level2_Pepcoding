#include<bits/stdc++.h>
using namespace std;

int* largestIncreasingSubs(int* arr, int n){
    int* dp = new int[n];
    for(int i = 0; i < n; i++){
        dp[i] = 1;
    }
    
    for(int i = 1; i < n; i++){
        for(int j = i-1; j >= 0; j--){
            if(arr[i] > arr[j]){
                dp[i] = max(dp[i], (dp[j]+1));
            }
        }
    }
    
    return dp;
}

int* largestDecreasingSubs(int* arr, int n){
    int* dp = new int[n];
    for(int i = 0; i < n; i++){
        dp[i] = 1;
    }
    
    for(int j = n-2; j >= 0; j--){
        for(int i = j+1; i < n; i++){
            if(arr[i] < arr[j]){
                dp[j] = max(dp[j], (dp[i]+1));
            }
        }
    }
    
    return dp;
}

void longestBiotonic(int* arr, int n){
    int* lis = largestIncreasingSubs(arr, n);
    int* lds = largestDecreasingSubs(arr, n);
    
    int* finalAns = new int[n];
    
    for(int i = 0; i < n; i++){
        finalAns[i] = (lis[i]+lds[i]-1);
    }
    
    int maxAns = INT_MIN;
    for(int i = 0; i < n; i++){
        maxAns = max(maxAns, finalAns[i]);
    }
    
    cout << maxAns << endl;
}

int main(){
    int n; 
    cin >> n;
    
    int* arr = new int[n];
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    
    longestBiotonic(arr, n);
    return 0;
}
