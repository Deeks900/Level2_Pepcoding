//Recursive Solution
class Solution {
public:
    bool isMatchHelper(string s, string p, int i, int j){
        //Base Case
        if(i == s.size() && j == p.size()){
            return true;
        }
        
        if(i == s.size()){
            if((j+1) < p.size()){
                if(p[j+1] == '*'){
                    bool tempAns = isMatchHelper(s, p, i, j+2);
                    return tempAns;
                }
                else{
                    return false;
                }
            }
            else{
                return false;
            }
        }
       
        if(j == p.size()){
            return false;
        }
       //Recursive Calls
        bool ans;
        if(((j+1) < p.size()) && (p[j+1] == '*')){
            //if it is making zero
            bool ans1 = isMatchHelper(s, p, i, j+2);
            //if it is not making zero
           if(p[j]==s[i] || p[j] == '.'){
               bool ans2 = isMatchHelper(s, p, i+1, j);
                ans = ans1||ans2;
           }
            else{
                ans = ans1;
            }
           
    
        }
        else{
            if(p[j] == s[i] || p[j]=='.'){
               ans = isMatchHelper(s, p, i+1, j+1); 
            }
            else{
                ans = false;
            }
        }
        return ans;
    }
    
    bool isMatch(string s, string p) {
        bool ans = isMatchHelper(s, p, 0, 0);
        return ans;
        
    }
};
