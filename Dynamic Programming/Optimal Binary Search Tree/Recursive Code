#include<bits/stdc++.h>
using namespace std;


int obst(int n, int* nodes, int* frequency, int start, int end){
    //Base Case
    if((start > end)){
        return 0;
    }
    
    if(start == end){
        return frequency[start];
    }
    
     int fs = 0;
        for(int z = start; z <= end; z++){
            fs += frequency[z];
        }
    int finalAns = INT_MAX;
    //Recursive Calls
    for(int k = start; k <= end; k++){
        int costLeft = obst(n, nodes, frequency, start, k-1);
        int costRight = obst(n, nodes, frequency, k+1, end);
       
        int totalAns = (costLeft+costRight+fs);
        finalAns = min(finalAns, totalAns);
    }
    
    return finalAns;
}

int main(){
    int n;
    cin >> n; 
    
    int* nodes = new int[n];
    for(int i = 0; i < n; i++){
        cin >> nodes[i];
    }
    
    
    int m;
    cin >> m;
    
    int* frequency = new int[m];
    for(int i = 0; i < m; i++){
        cin >> frequency[i];
    }

    cout << obst(n, nodes, frequency, 0, n-1);
    return 0;
}
